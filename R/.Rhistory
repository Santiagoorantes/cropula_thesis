# Biased series
for (i in seq_along(meth)) {
print(cor(yield_dt, p, method = meth[i]))
}
# Detrended/unbiased series
for (i in seq_along(meth)) {
print(cor(yield_dt, price_dt, method = meth[i]))
}
stat_rho <- cor(yield_dt, price_dt, method = meth[3])
years <- trgt_df$year
roll <- 10
rho <- numeric()
for (i in 1:(l-roll)) {
rho[i] <- (cor(yield_dt[i:(i+roll)],price_dt[i:(i+roll)],method = "spearman"))
}
ggplot() + geom_line(aes(x = years[(roll+1):l], y=rho)) +
geom_abline(intercept = stat_rho, slope = 0)
# Option 2: CME-based harvest price
# (Prices in CME are in USD cents per bushel)
bush_tonne <- 39.368
dates <- rownames(corn_ts)
harvest_price <- data.frame("year" = year(dates),
"month" = month(dates),
"day" = day(dates),
"price" = corn_ts$Settle)
# May and June are the months where almost all of the harvest happens
harvest_months <- c(5,6)
harvest_price <- harvest_price %>%
group_by(year) %>%
filter(month %in% harvest_months) %>%
summarise(av_price = mean(price)) %>%
mutate(USD_tonne = av_price/100 * bush_tonne)
p <- harvest_price$USD_tonne
plot(p, type="l")
# Correlation of original vs detrended CME price series
l <- length(p)
t <- seq(1, l, 1)
model <- lm(p~t)
price_dt <- model$fitted.values[l] * (1 + model$residuals / model$fitted.values)
# Correlation
meth <- c("pearson", "kendall", "spearman")
# Biased series
for (i in seq_along(meth)) {
print(cor(yield_dt, p, method = meth[i]))
}
# Detrended/unbiased series
for (i in seq_along(meth)) {
print(cor(yield_dt, price_dt, method = meth[i]))
}
stat_rho <- cor(yield_dt, price_dt, method = meth[2])
years <- trgt_df$year
roll <- 8
rho <- numeric()
for (i in 1:(l-roll)) {
rho[i] <- (cor(yield_dt[i:(i+roll)],price_dt[i:(i+roll)],method = "kendall"))
}
ggplot() + geom_line(aes(x = years[(roll+1):l], y=rho)) +
geom_abline(intercept = stat_rho, slope = 0)
# We can notice at least some of the negative correlation
fig <- ggplot() +
geom_point(aes(x = yield_dt, y = price_dt),
colour = "steelblue", size = 2)
ggMarginal(fig, type = "histogram", size = 3,
fill = "steelblue",
xparams = list(binwidth = 0.5),
yparams = list(binwidth = 6))
# --- Marginals ---
# We have our marginals for the yield and price
n <- 10000
# Shifted Beta dist
params <- coef(fit_BetaShift)
sim_y <- rbeta_shift(n, alpha = params["alpha"], beta = params["beta"],
a = a, b = b)
# CDF
Y <- pbeta_shift(sim_y, params["alpha"], params["beta"], a, b)
# t-dist for the price (ARMA-GARCH residuals)
ag_params <- coef(model_fit)
nu <- coef(model_fit)["shape"]
sim_t <- rt(n, nu)
# CDF
P <- pt(sim_t, df = nu)
fig <- ggplot() +
geom_point(aes(x = sim_y, y = sim_t),
colour = "steelblue", size = 2)
ggMarginal(fig, type = "histogram", size = 3,
fill = "steelblue",
xparams = list(binwidth = 0.5),
yparams = list(binwidth = 1))
# --- Fitting the Copulas ---
cop_model <- claytonCopula(dim = 2)
m <- pobs(cbind(sim_y, sim_t))
fit <- fitCopula(cop_model, m, method = "ml")
coef(fit)
summary(fit)
# VineCopula
#fit_Cop <- BiCopSelect(Y, P, familyset = NA)
test_fit1 <- fitdist(price_dt, distr = "weibull")
summary(test_fit1)
test_fit2 <- fitdist(price_dt, distr = "norm")
summary(test_fit2)
test_fit3 <- fitdist(price_dt, distr = "lnorm")
summary(test_fit3)
test_fit4 <- fitdist(price_dt, distr = "gamma")
summary(test_fit4)
test_fit5 <- fitdist(price_dt, distr = "Gumbel",
start = list(location = 0, scale = 1))
summary(test_fit5)
# Goodness of fit statistics and criteria
fitted_dists <- list(test_fit1, test_fit2, test_fit3, test_fit4, test_fit5)
gof <- gofstat(fitted_dists)
qqcomp(fitted_dists)
cdfcomp(fitted_dists)
# DataFrame of Goodness-of-fit
(gof_df <- data.frame("KS" = gof$ks,
"CvM" = gof$cvm,
"AD" = gof$ad,
"AIC" = gof$aic,
"BIC" = gof$bic))
# Gumbel-dist for the detrended price
params <- coef(test_fit5)
sim_Gum <- rGumbel(n, location = params["location"], scale = params["scale"])
# CDF
P_Gum <- pGumbel(sim_Gum, params["location"], params["scale"])
fig <- ggplot() +
geom_point(aes(x = sim_y, y = sim_Gum),
colour = "steelblue", size = 2)
ggMarginal(fig, type = "histogram", size = 3,
fill = "steelblue",
xparams = list(binwidth = 0.5),
yparams = list(binwidth = 10))
plot(res)
hist(res)
mean(res)
length(res)
res[1]
class(res)
res[1]
dim(res[1])
dim(res)
dates <- rownames(res)
price_res <- data.frame("year" = year(dates),
"month" = month(dates),
"day" = day(dates),
"price" = res)
dates <- rownames(res)
price_res <- data.frame("year" = year(dates),
"month" = month(dates),
"day" = day(dates),
"price" = res[,1])
dates <- rownames(res)
head(dates)
rownames(res)[1:5]
res[,1]
head(res)
head(res[[1]])
head(res["date"])
head(res[1])
head(res[1,])
head(res[,1])
head(res[,1][,1])
head(res[,1][1])
head(res[[,1]])
head(res[[1]])
head(res[[2]])
head(res[[0]])
names(res[[1]])
name(res[[1]])
res[(1)]
res[(1,2)]
res[(1:2)]
res[1:2]
dim(res[1:2])
head(rownames(res))
head(names(res))
head(dates(res))
head(date(res))
dates <- date(res)
price_res <- data.frame("year" = year(dates),
"month" = month(dates),
"day" = day(dates),
"price" = res)
View(price_res)
dates <- date(res)
price_res <- data.frame("year" = year(dates),
"month" = month(dates),
"day" = day(dates),
"residual" = res)
# May and June are the months where almost all of the harvest happens
harvest_months <- c(5,6)
price_res <- price_res %>%
group_by(year) %>%
filter(month %in% harvest_months) %>%
summarise(av_res = mean(residual))
plot(price_res$av_res, type="l")
trgt_res <- price_res$av_res
plot(trgt_res, type="l")
# Rank Correlation with the detrended yields
for (i in seq_along(meth)) {
print(cor(yield_dt, trgt_res, method = meth[i]))
}
stat_rho <- cor(yield_dt, trgt_res, method = meth[2])
price_res
years <- price_res$year
roll <- 8
rho <- numeric()
for (i in 1:(l-roll)) {
rho[i] <- (cor(yield_dt[i:(i+roll)],trgt_res[i:(i+roll)],method = "kendall"))
}
ggplot() + geom_line(aes(x = years[(roll+1):l], y=rho)) +
geom_abline(intercept = stat_rho, slope = 0)
stat_rho
ggplot() + geom_line(aes(x = years[(roll+1):l], y=rho)) +
geom_abline(intercept = stat_rho, slope = 0)
roll <- 10
rho <- numeric()
for (i in 1:(l-roll)) {
rho[i] <- (cor(yield_dt[i:(i+roll)],trgt_res[i:(i+roll)],method = "kendall"))
}
ggplot() + geom_line(aes(x = years[(roll+1):l], y=rho)) +
geom_abline(intercept = stat_rho, slope = 0)
roll <- 5
rho <- numeric()
for (i in 1:(l-roll)) {
rho[i] <- (cor(yield_dt[i:(i+roll)],trgt_res[i:(i+roll)],method = "kendall"))
}
ggplot() + geom_line(aes(x = years[(roll+1):l], y=rho)) +
geom_abline(intercept = stat_rho, slope = 0)
roll <- 10
rho <- numeric()
for (i in 1:(l-roll)) {
rho[i] <- (cor(yield_dt[i:(i+roll)],trgt_res[i:(i+roll)],method = "kendall"))
}
ggplot() + geom_line(aes(x = years[(roll+1):l], y=rho)) +
geom_abline(intercept = stat_rho, slope = 0)
roll <- 8
rho <- numeric()
for (i in 1:(l-roll)) {
rho[i] <- (cor(yield_dt[i:(i+roll)],trgt_res[i:(i+roll)],method = "kendall"))
}
ggplot() + geom_line(aes(x = years[(roll+1):l], y=rho)) +
geom_abline(intercept = stat_rho, slope = 0)
cop_model <- claytonCopula(dim = 2)
m <- pobs(cbind(sim_y, sim_t))
fit <- fitCopula(cop_model, m, method = "ml")
coef(fit)
summary(fit)
?iTau()
?iTau
# Implicit theta value for a given tau
iTau(joeCopula(), stat_rho)
# Implicit theta value for a given tau
iTau(joeCopula(), -stat_rho)
# Implicit theta value for a given tau
iTau(claytonCopula(), stat_rho)
stat_rho
# Implicit theta value for a given tau
iTau(list(claytonCopula(), normalCopula()), stat_rho)
# Implicit theta value for a given tau
iTau(list=c(claytonCopula(), normalCopula()), stat_rho)
# Implicit theta value for a given tau
cops <- list(claytonCopula(), normalCopula())
iTau(cops, stat_rho)
iTau(cops[1], stat_rho)
# Implicit theta value for a given tau
cops <- list(claytonCopula(), normalCopula())
cops
# Implicit theta value for a given tau
cops <- c(claytonCopula(), normalCopula())
iTau(cops[1], stat_rho)
cops[1]
iTau(cops[[1]], stat_rho)
iTau(cops[[1:2]], stat_rho)
iTau(cops[[2]], stat_rho)
# Implicit theta value for a given tau
cops <- list(archmCopula(),
claytonCopula(),
normalCopula(),
tCopula())
# Implicit theta value for a given tau
cops <- list(gumbelCopula(),
claytonCopula(),
normalCopula(),
tCopula())
iTau(cops[[1]], stat_rho)
iTau(cops[[1]], -stat_rho)
iTau(cops[[2]], stat_rho)
iTau(cops[[2]], -stat_rho)
iTau(cops[[3]], stat_rho)
iTau(cops[[4]], stat_rho)
cops <- list(claytonCopula(),
normalCopula(),
tCopula(),
amhCopula())
iTau(cops[[4]], stat_rho)
# Implicit theta value for a given tau
noneg_cops <- list(gumbelCopula(),
joeCopula())
iTau(noneg_cops[[1]], -stat_rho)
iTau(noneg_cops[[2]], -stat_rho)
iTau(cops[[1]], stat_rho)
C2clayton <- onacopula("Clayton", C(stat_rho, 1:2))
C2clayton
str(C2clayton)
U2 <- rnacopula(1000, C2clayton)
DIM(U2 <- rnacopula(1000, C2clayton))
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
iTau(cops[[2]], stat_rho)
C2clayton <- onacopula("Clayton", C(stat_rho, 1:2))
str(C2clayton)
dim(U2 <- rnacopula(1000, C2clayton))
C2clayton <- onacopula("Clayton", C(stat_rho, 1))
str(C2clayton)
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
iTau(cops[[1]], stat_rho)
C2clayton <- onacopula("Clayton", C(stat_rho, 1:3))
str(C2clayton)
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
C2clayton <- onacopula("Clayton", C(stat_rho, 1:2))
str(C2clayton)
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
theta <- iTau(cops[[1]], stat_rho)
C2clayton <- onacopula("Clayton", C(theta, 1:2))
theta <- iTau(cops[[1]], stat_rho)
C2clayton <- onacopula("Clayton", C(theta, 1:2))
str(C2clayton)
(C2clayton)
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
C2clayton <- onacopula("Clayton", C(theta, 1:2))
C2clayton
theta
C2clayton <- onacopula("Clayton", C(theta, 1:3))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
C2clayton <- onacopula("Clayton", C(abs(theta), 1:3))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
C2clayton <- onacopula("Clayton", C(abs(theta), 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
C2clayton <- onacopula("Clayton", C(theta, 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(U2)
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(U2)
C2clayton <- onacopula("Clayton", C(abs(theta), 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(U2)
theta <- iTau(cops[[1]], 0.5)
C2clayton <- onacopula("Clayton", C(abs(theta), 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(U2)
theta <- iTau(cops[[1]], -0.5)
C2clayton <- onacopula("Clayton", C(abs(theta), 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(U2)
C2clayton <- onacopula("Clayton", C(theta, 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(U2)
stat_rho
stat_rho
theta <- iTau(cops[[1]], stat_rho)
C2clayton <- onacopula("Clayton", C(abs(theta), 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(U2)
theta <- iTau(cops[[4]], stat_rho)
theta
C2clayton <- onacopula("AMH", C(abs(theta), 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(U2)
C2clayton <- onacopula("AMH", C(theta, 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(-U2)
class(U2)
U2
C2clayton <- onacopula("AMH", C(abs(theta), 1:2))
C2clayton
dim(U2 <- rnacopula(1000, C2clayton))
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(-U2)
splom2(U2)
splom2(-U2)
splom2(sign(stat_rho) * U2)
theta <- iTau(cops[[4]], stat_rho)
theta
theta <- iTau(cops[[4]], -stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
theta
theta <- iTau(cops[[4]], stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(n, C2clayton))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
cop_model <- claytonCopula(dim = 2)
splom2(sign(stat_rho) * U2, pch = 19)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2, pch = 19)
splom2(sign(stat_rho) * U2, pch = 19, cex = 0.4)
splom2(sign(stat_rho) * U2, cex = 0.4)
splom2(sign(stat_rho) * U2, cex = 0.7)
splom2(sign(stat_rho) * U2, cex = 1)
splom2(sign(stat_rho) * U2, cex = 0.5)
dim(U2 <- rnacopula(n, C2clayton))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2, cex = 0.5)
theta <- iTau(cops[[4]], stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(n, C2clayton))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2, cex = 0.4)
theta <- iTau(cops[[4]], -stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(n, C2clayton))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2, cex = 0.4)
theta <- iTau(cops[[4]], -stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2, cex = 0.5)
theta <- iTau(cops[[4]], stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2clayton))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2, cex = 0.5)
splom2(sign(stat_rho) * U2)
theta <- iTau(cops[[4]], stat_rho)
dim(U2 <- rnacopula(1000, C2))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
theta <- iTau(cops[[4]], -stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
theta
theta <- iTau(cops[[4]], stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
theta <- iTau(cops[[3]], stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
theta <- iTau(cops[[3]], stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
theta <- iTau(cops[[1]], stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
theta <- iTau(cops[[4]], stat_rho)
C2 <- onacopula("AMH", C(abs(theta), 1:2))
C2
dim(U2 <- rnacopula(1000, C2))
cor(U2, method="kendall")
splom2(sign(stat_rho) * U2)
stat_rho
source("config.R")
API_KEY
